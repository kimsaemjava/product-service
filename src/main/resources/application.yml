server:
#  port: 0
  port: 9301

spring:
  application:
    name: product-service
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
#    url: jdbc:mysql://mydb.c92y6408ia65.ap-northeast-2.rds.amazonaws.com:3306/msa?serverTimezone=Asia/Seoul
#    username: mytest
#    password: mypass1234
    url: jdbc:mysql://192.168.45.95:3306/msa?serverTimezone=Asia/Seoul
    username: mytest2
    password: 1234
  jpa:
    show-sql: true
    hibernate:
#      ddl-auto: create
          ddl-auto: none

    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true

logging:
  level:
    org:
      hibernate:
        sql: debug
        type:
          descriptor:
            sql: trace
    com.example.productservice.client: debug

#eureka:
#  client:
#    register-with-eureka: true
#    fetch-registry: true
#
#    service-url:
#      defaultZone: http://52.79.252.218:8761/eureka
#클라이언트는 주기적으로 Eureka 서버에 heartbeat 신호를 보내 자신의 상태를 알립니다.
  #이 신호를 Eureka 서버가 일정 시간 동안 수신하지 못하면, 해당 클라이언트를 "DOWN"
  #상태로 표시하고 레지스트리에서 제거합니다. 분산환경에서는 자연스러운 현상
  #lease-expiration-duration-in-seconds에 정의한 시간동안 하트비트가 도착하지 않으면 서버가 제거한다.
#  instance:
#    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
#    lease-renewal-interval-in-seconds: 10  # 기본값: 30초, 클라이언트가 heartbeat 신호를 보낼 주기
#    lease-expiration-duration-in-seconds: 30  # 기본값: 90초, 서버가 클라이언트를 제거하는 시간